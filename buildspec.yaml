version: 0.2

phases:
  install:
    commands:
      - echo Installing dependencies...
      - export AWS_SDK_LOAD_CONFIG=1

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - ACCOUNT_ID=423623849965
      - REGION=us-east-1
      - IMAGE_TAG=v1.$CODEBUILD_BUILD_NUMBER
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com

      - echo "Detecting current IAM role ARN..."
      - CALLER_ARN=$(aws sts get-caller-identity --query Arn --output text)
      - ROLE_ARN=$(echo $CALLER_ARN | sed 's|^arn:aws:sts::|arn:aws:iam::|' | sed 's/:assumed-role/:role/' | cut -d'/' -f1-6)
      - echo "Registering IAM role $ROLE_ARN to EKS cluster..."
      - |
        aws eks create-access-entry \
          --cluster-name ecommerce-cluster \
          --region $REGION \
          --principal-arn "$ROLE_ARN" \
          --type STANDARD \
          --access-policy-arn arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy || echo "Access entry may already exist"

  build:
    commands:
      - echo Building cart image...
      - cd src/cart
      - docker build -t cart:${IMAGE_TAG} .
      - docker tag cart:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/cart:${IMAGE_TAG}
      - cd -

      - echo Building catalog image...
      - cd src/catalog
      - docker build -t catalog:${IMAGE_TAG} .
      - docker tag catalog:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/catalog:${IMAGE_TAG}
      - cd -

  post_build:
    commands:
      - echo Pushing cart image...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/cart:${IMAGE_TAG}

      - echo Pushing catalog image...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/catalog:${IMAGE_TAG}

      - echo Preparing Kubernetes deployment files...
      - mkdir -p k8s-out

      - sed "s|IMAGE_PLACEHOLDER|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/cart:${IMAGE_TAG}|g" k8s/cart-deployment.yaml > k8s-out/cart-deployment.yaml
      - cp k8s/cart-service.yaml k8s-out/ || echo "No cart-service.yaml found"

      - sed "s|IMAGE_PLACEHOLDER|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/catalog:${IMAGE_TAG}|g" k8s/catalog-deployment.yaml > k8s-out/catalog-deployment.yaml
      - cp k8s/catalog-service.yaml k8s-out/ || echo "No catalog-service.yaml found"

      - cp k8s/ui-deployment.yaml k8s-out/
      - cp k8s/ui-service.yaml k8s-out/

artifacts:
  base-directory: k8s-out
  files:
    - cart-deployment.yaml
    - catalog-deployment.yaml
    - ui-deployment.yaml
    - ui-service.yaml
